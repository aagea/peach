<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2017 The Proteus Project
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.proteus.peach</groupId>
    <artifactId>peach-parent</artifactId>
    <packaging>pom</packaging>
    <version>0.1.0-SNAPSHOT</version>
    <modules>
        <module>peach-server</module>
        <module>peach-client</module>
        <module>peach-common</module>
    </modules>
    <name>Peach project - Parent</name>
    <url>https://www.proteus-bigdata.com/</url>

    <developers>
        <developer>
            <id>aagea</id>
            <name>Alvaro Agea</name>
            <email>alvaro@novelti.io</email>
            <organization>Novelti</organization>
        </developer>
        <developer>
            <id>dhiguero</id>
            <name>Daniel Higuero</name>
            <email>daniel@novelti.io</email>
            <organization>Novelti</organization>
        </developer>
        <developer>
            <id>jtirado</id>
            <name>Juan Manuel Tirado</name>
            <email>juan@novelti.io</email>
            <organization>Novelti</organization>
        </developer>
    </developers>

    <properties>
        <scala.version>2.11.6</scala.version>
        <junit.version>4.12</junit.version>
        <akka.version>2.3-custom</akka.version>
        <scala.binary.version>2.11</scala.binary.version>
        <maven.scala.plugin.version>3.2.1</maven.scala.plugin.version>
        <slf4j.version>1.7.25</slf4j.version>
        <scalastyle.maven.plugin.version>0.8.0</scalastyle.maven.plugin.version>
        <maven.compiler.plugin.version>3.3</maven.compiler.plugin.version>

        <base.path>${basedir}</base.path>
        <scalastyle.fail>true</scalastyle.fail>

        <scoverage.plugin.version>1.3.0</scoverage.plugin.version>
        <scoverage.aggregate>true</scoverage.aggregate>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>


        <dependency>
            <groupId>com.data-artisans</groupId>
            <artifactId>flakka-actor_${scala.binary.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>

        <dependency>
            <groupId>com.data-artisans</groupId>
            <artifactId>flakka-remote_${scala.binary.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>

        <dependency>
            <groupId>com.data-artisans</groupId>
            <artifactId>flakka-slf4j_${scala.binary.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>

        <dependency>
            <groupId>com.data-artisans</groupId>
            <artifactId>flakka-contrib_${scala.binary.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>

        <dependency>
            <groupId>com.data-artisans</groupId>
            <artifactId>flakka-testkit_${scala.binary.version}</artifactId>
            <version>${akka.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scalastyle-maven-plugin</artifactId>
                    <version>${scalastyle.maven.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.scala-tools</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>${maven.scala.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.0.2</version>
                </plugin>
                <plugin>
                    <groupId>org.scoverage</groupId>
                    <artifactId>scoverage-maven-plugin</artifactId>
                    <version>${scoverage.plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.18.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.scalastyle</groupId>
                <artifactId>scalastyle-maven-plugin</artifactId>
                <configuration>
                    <sourceDirectory>${basedir}/src/main/scala</sourceDirectory>
                    <testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>
                    <configLocation>${base.path}/scalastyle_config.xml</configLocation>
                    <outputFile>${project.build.directory}/scalastyle-output.xml
                    </outputFile>
                    <outputEncoding>UTF-8</outputEncoding>
                    <inputEncoding>UTF-8</inputEncoding>
                    <failOnViolation>${scalastyle.fail}</failOnViolation>
                    <includeTestSourceDirectory>false</includeTestSourceDirectory>
                    <verbose>false</verbose>
                </configuration>
                <executions>
                    <execution>
                        <id>scala-style-validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <failOnWarning>false</failOnWarning>
                        </configuration>
                    </execution>
                    <execution>
                        <id>scala-style-verify</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <failOnWarning>${scalastyle.fail}</failOnWarning>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.scoverage</groupId>
                <artifactId>scoverage-maven-plugin</artifactId>
                <configuration>
                    <minimumCoverage>80</minimumCoverage>
                    <failOnMinimumCoverage>true</failOnMinimumCoverage>
                    <aggregate>${scoverage.aggregate}</aggregate>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal> <!-- or integration-check -->
                        </goals>
                        <phase>prepare-package</phase> <!-- or any other phase -->
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
